{
  "name": "foto-render",
  "version": "2.0.0",
  "private": true,
  "description": "AI Image Generator v2.0 - Robust queue-based architecture with conflict-free startup, PowerShell management, and scalable GPU workers",
  "keywords": [
    "ai",
    "image-generation",
    "sdxl",
    "diffusion",
    "nextjs",
    "fastapi",
    "queue-based",
    "redis",
    "scalable",
    "gpu-workers",
    "real-time"
  ],
  "scripts": {
    "start": "node choose-api.js",
    "start:with-frontend": "concurrently \"node choose-api.js\" \"npm run start:frontend\"",
    "start:mono": "cd backend && python main.py --port 8000",
    "start:queue": "cd backend && python api_v2.py --port 8000",
    "start:backend": "cd backend && npm run start",
    "start:frontend": "cd frontend && npm run dev",
    "start:robust": "cd backend && powershell -ExecutionPolicy Bypass -File .\\start_system.ps1",
    "start:quick": "cd backend && .\\quick_start.bat",
    "fix:deps": "cd backend && .\\fix_dependencies.bat",
    "fix:venv": "cd backend && .\\recreate_venv.bat",
    "install:global": "cd backend && .\\install_global.bat",
    "install:fixed": "cd backend && .\\install_global_fixed.bat",
    "test:python": "cd backend && .\\test_python_clean.bat",
    "stop": "cd backend && npm run stop",
    "restart": "cd backend && npm run restart",
    "status": "cd backend && npm run status",
    "status:detailed": "cd backend && npm run status:detailed",
    "cleanup": "cd backend && npm run stop",
    "cleanup:nuclear": "cd backend && npm run cleanup:nuclear",
    "emergency:fix": "cd backend && npm run emergency:fix",
    "dev": "npm run start:with-frontend",
    "dev:manual": "echo '⚠️ Manual startup - run backend and frontend separately:' && echo '1. cd backend && npm run start' && echo '2. cd frontend && npm run dev'",
    "dev:frontend-only": "cd frontend && npm run dev",
    "dev:backend-only": "cd backend && npm run start",
    "dev:network": "cd frontend && npm run dev:network",
    "health": "curl -s http://localhost:8000/health | python -m json.tool 2>/dev/null || echo 'Backend not responding'",
    "queue": "curl -s http://localhost:8000/queue/stats | python -m json.tool 2>/dev/null || echo 'Queue not responding'",
    "redis:ping": "cd backend && npm run redis:ping",
    "redis:logs": "cd backend && npm run redis:logs",
    "frontend:dev": "cd frontend && npm run dev",
    "frontend:dev:network": "cd frontend && npm run dev:network",
    "frontend:build": "cd frontend && npm run build",
    "frontend:start": "cd frontend && npm run start",
    "frontend:lint": "cd frontend && npm run lint",
    "frontend:install": "cd frontend && npm install",
    "frontend:clean": "cd frontend && npm run clean",
    "backend:install": "cd backend && pip install -r requirements.txt",
    "backend:health": "cd backend && npm run health",
    "backend:db:create": "cd backend && npm run db:create",
    "backend:db:seed": "cd backend && npm run db:seed",
    "build": "npm run frontend:build",
    "build:all": "npm run install:all && npm run frontend:build",
    "install:all": "npm run frontend:install && npm run backend:install",
    "install:backend": "npm run backend:install",
    "install:frontend": "npm run frontend:install",
    "lint": "npm run frontend:lint",
    "clean": "npm run frontend:clean && npm run backend:clean",
    "backend:clean": "cd backend && rm -rf __pycache__ && find . -name '*.pyc' -delete 2>/dev/null || echo 'Backend cleaned'",
    "system:setup": "echo '🔧 Setting up Foto Render (v2.0 - Robust Edition)...' && npm run install:all && echo '✅ Setup complete! Use: npm start'",
    "system:full-restart": "npm run cleanup:nuclear && timeout /t 10 /nobreak >nul 2>&1 || sleep 10 && npm run start:robust",
    "help": "node -e \"console.log('\\n🎨 Foto Render v2.0 - Available Commands:\\n'); console.log('🚀 npm start                 - Choose API & start backend'); console.log('🌐 npm run start:with-frontend - Choose API & start both backend+frontend'); console.log('🏠 npm run start:mono        - Direct start monolithic API'); console.log('⚡ npm run start:queue       - Direct start queue-based API'); console.log('🔧 npm run test:python       - Test Python 3.13 installation'); console.log('🌟 npm run install:fixed     - Install with Python 3.13 (bypass PATH)'); console.log('🧹 npm run cleanup           - Stop all processes'); console.log('📊 npm run status            - Check system health'); console.log('\\n💡 For steady power (no light flicker): choose Monolithic'); console.log('💡 For multiple users: choose Queue-based'); console.log('💡 If PATH issues: use install:fixed then start\\n');\""
  },
  "dependencies": {
    "next": "^15.3.4",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-dropzone": "^14.3.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@types/node": "^20",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "eslint": "^9",
    "eslint-config-next": "^15.3.4",
    "postcss": "^8.5.4",
    "tailwindcss": "^3.4.17",
    "typescript": "^5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.9.0"
  },
  "workspaces": [
    "frontend"
  ]
}
